{
    "swagger": "2.0",
    "info": {
        "description": "A markdown-based lightweight blog service.",
        "title": "devlog",
        "contact": {
            "name": "Author",
            "url": "https://github.com/AcrylicShrimp",
            "email": "led789zxpp@naver.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "0.0.1"
    },
    "basePath": "/v1",
    "paths": {
        "/admin/categories": {
            "get": {
                "description": "Lists all categories.\nThe categories are sorted by the 'name' field in ascending order.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin category management"
                ],
                "summary": "List categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AdminCategory"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError500"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new category.\nThe 'name' field must be unique across all categories.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin category management"
                ],
                "summary": "Create category",
                "parameters": [
                    {
                        "description": "The category to be created",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AdminNewCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.AdminNewCategoryCreated"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError401"
                        }
                    },
                    "409": {
                        "description": "Conflict: when the name is not unique(already taken)",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError409"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError500"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes the given category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin category management"
                ],
                "summary": "Remove category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "A category name to be removed",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NoContent: when the category has been removed successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError401"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError404"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError500"
                        }
                    }
                }
            }
        },
        "/admin/unsaved-posts": {
            "get": {
                "description": "Lists all unsaved posts.\nThe unsaved posts are sorted by the 'created-at' field in ascending order.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin post management"
                ],
                "summary": "List unsaved posts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AdminUnsavedPost"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPError500"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AdminCategory": {
            "type": "object",
            "required": [
                "created-at",
                "modified-at",
                "name"
            ],
            "properties": {
                "created-at": {
                    "type": "string",
                    "example": "2021-08-18 00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "web-related things"
                },
                "modified-at": {
                    "type": "string",
                    "example": "2021-08-18 00:00:00Z"
                },
                "name": {
                    "type": "string",
                    "example": "web"
                }
            }
        },
        "model.AdminNewCategory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "web-related things"
                },
                "name": {
                    "type": "string",
                    "example": "web"
                }
            }
        },
        "model.AdminNewCategoryCreated": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "web"
                }
            }
        },
        "model.AdminUnsavedPost": {
            "type": "object",
            "required": [
                "created-at",
                "modified-at",
                "uuid"
            ],
            "properties": {
                "access-level": {
                    "type": "string",
                    "example": "public"
                },
                "category": {
                    "type": "string",
                    "example": "web"
                },
                "created-at": {
                    "type": "string",
                    "example": "2021-08-18 00:00:00Z"
                },
                "modified-at": {
                    "type": "string",
                    "example": "2021-08-18 00:00:00Z"
                },
                "slug": {
                    "type": "string",
                    "example": "my-first-post"
                },
                "thumbnail": {
                    "$ref": "#/definitions/model.AdminUnsavedPostThumbnail"
                },
                "title": {
                    "type": "string",
                    "example": "My first post"
                },
                "uuid": {
                    "type": "string",
                    "example": "fd00000aa8660b5b010006acdc0100000101000100010000fd00000aa8660b5b"
                }
            }
        },
        "model.AdminUnsavedPostThumbnail": {
            "type": "object",
            "required": [
                "created-at",
                "validity"
            ],
            "properties": {
                "created-at": {
                    "type": "string",
                    "example": "2021-08-18 00:00:00Z"
                },
                "hash": {
                    "type": "string",
                    "example": "LEHV6nWB2yk8pyo0adR*.7kCMdnj"
                },
                "height": {
                    "type": "integer",
                    "example": 128
                },
                "url": {
                    "type": "string",
                    "example": "https://image.example.com/example-image"
                },
                "validity": {
                    "type": "string",
                    "example": "pending"
                },
                "width": {
                    "type": "integer",
                    "example": 256
                }
            }
        },
        "model.HTTPError400": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "400 - Bad request"
                }
            }
        },
        "model.HTTPError401": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "401 - Unauthorized"
                }
            }
        },
        "model.HTTPError404": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "404 - Not found"
                }
            }
        },
        "model.HTTPError409": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "409 - Conflict"
                }
            }
        },
        "model.HTTPError500": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "500 - Internal Server Error"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Api-Token",
            "in": "header"
        }
    }
}