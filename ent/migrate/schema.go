// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// AdminsColumns holds the columns for the "admins" table.
	AdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 128},
		{Name: "username", Type: field.TypeString, Unique: true, Size: 64},
		{Name: "password", Type: field.TypeString, Size: 60},
		{Name: "joined_at", Type: field.TypeTime},
	}
	// AdminsTable holds the schema information for the "admins" table.
	AdminsTable = &schema.Table{
		Name:        "admins",
		Columns:     AdminsColumns,
		PrimaryKey:  []*schema.Column{AdminsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// AdminSessionsColumns holds the columns for the "admin_sessions" table.
	AdminSessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "token", Type: field.TypeString, Unique: true, Size: 256},
		{Name: "used_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "admin_sessions", Type: field.TypeInt, Nullable: true},
	}
	// AdminSessionsTable holds the schema information for the "admin_sessions" table.
	AdminSessionsTable = &schema.Table{
		Name:       "admin_sessions",
		Columns:    AdminSessionsColumns,
		PrimaryKey: []*schema.Column{AdminSessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "admin_sessions_admins_sessions",
				Columns: []*schema.Column{AdminSessionsColumns[4]},

				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 32},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 256},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "modified_at", Type: field.TypeTime},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:        "categories",
		Columns:     CategoriesColumns,
		PrimaryKey:  []*schema.Column{CategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PostsColumns holds the columns for the "posts" table.
	PostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString, Unique: true, Size: 64},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 256},
		{Name: "access_level", Type: field.TypeEnum, Enums: []string{"public", "unlisted", "private"}},
		{Name: "title", Type: field.TypeString, Size: 128},
		{Name: "content", Type: field.TypeString, Nullable: true},
		{Name: "html_content", Type: field.TypeString, Nullable: true},
		{Name: "preview_content", Type: field.TypeString, Nullable: true, Size: 256},
		{Name: "accumulated_image_index", Type: field.TypeUint64},
		{Name: "accumulated_video_index", Type: field.TypeUint64},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "modified_at", Type: field.TypeTime},
		{Name: "category_posts", Type: field.TypeInt, Nullable: true},
	}
	// PostsTable holds the schema information for the "posts" table.
	PostsTable = &schema.Table{
		Name:       "posts",
		Columns:    PostsColumns,
		PrimaryKey: []*schema.Column{PostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "posts_categories_posts",
				Columns: []*schema.Column{PostsColumns[12]},

				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PostImagesColumns holds the columns for the "post_images" table.
	PostImagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "index", Type: field.TypeUint64},
		{Name: "width", Type: field.TypeUint32},
		{Name: "height", Type: field.TypeUint32},
		{Name: "hash", Type: field.TypeString, Size: 64},
		{Name: "url", Type: field.TypeString, Unique: true, Size: 256},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "post_images", Type: field.TypeInt, Nullable: true},
	}
	// PostImagesTable holds the schema information for the "post_images" table.
	PostImagesTable = &schema.Table{
		Name:       "post_images",
		Columns:    PostImagesColumns,
		PrimaryKey: []*schema.Column{PostImagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "post_images_posts_images",
				Columns: []*schema.Column{PostImagesColumns[8]},

				RefColumns: []*schema.Column{PostsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PostThumbnailsColumns holds the columns for the "post_thumbnails" table.
	PostThumbnailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "width", Type: field.TypeUint32},
		{Name: "height", Type: field.TypeUint32},
		{Name: "hash", Type: field.TypeString, Size: 64},
		{Name: "url", Type: field.TypeString, Unique: true, Size: 256},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "post_thumbnail", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// PostThumbnailsTable holds the schema information for the "post_thumbnails" table.
	PostThumbnailsTable = &schema.Table{
		Name:       "post_thumbnails",
		Columns:    PostThumbnailsColumns,
		PrimaryKey: []*schema.Column{PostThumbnailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "post_thumbnails_posts_thumbnail",
				Columns: []*schema.Column{PostThumbnailsColumns[6]},

				RefColumns: []*schema.Column{PostsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PostVideosColumns holds the columns for the "post_videos" table.
	PostVideosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "index", Type: field.TypeUint64},
		{Name: "url", Type: field.TypeString, Unique: true, Size: 256},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "post_videos", Type: field.TypeInt, Nullable: true},
	}
	// PostVideosTable holds the schema information for the "post_videos" table.
	PostVideosTable = &schema.Table{
		Name:       "post_videos",
		Columns:    PostVideosColumns,
		PrimaryKey: []*schema.Column{PostVideosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "post_videos_posts_videos",
				Columns: []*schema.Column{PostVideosColumns[5]},

				RefColumns: []*schema.Column{PostsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminsTable,
		AdminSessionsTable,
		CategoriesTable,
		PostsTable,
		PostImagesTable,
		PostThumbnailsTable,
		PostVideosTable,
	}
)

func init() {
	AdminSessionsTable.ForeignKeys[0].RefTable = AdminsTable
	PostsTable.ForeignKeys[0].RefTable = CategoriesTable
	PostImagesTable.ForeignKeys[0].RefTable = PostsTable
	PostThumbnailsTable.ForeignKeys[0].RefTable = PostsTable
	PostVideosTable.ForeignKeys[0].RefTable = PostsTable
}
