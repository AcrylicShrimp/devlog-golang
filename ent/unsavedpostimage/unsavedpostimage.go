// Code generated by entc, DO NOT EDIT.

package unsavedpostimage

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the unsavedpostimage type in the database.
	Label = "unsaved_post_image"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldValidity holds the string denoting the validity field in the database.
	FieldValidity = "validity"
	// FieldWidth holds the string denoting the width field in the database.
	FieldWidth = "width"
	// FieldHeight holds the string denoting the height field in the database.
	FieldHeight = "height"
	// FieldHash holds the string denoting the hash field in the database.
	FieldHash = "hash"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeUnsavedPost holds the string denoting the unsaved_post edge name in mutations.
	EdgeUnsavedPost = "unsaved_post"
	// Table holds the table name of the unsavedpostimage in the database.
	Table = "unsaved_post_images"
	// UnsavedPostTable is the table the holds the unsaved_post relation/edge.
	UnsavedPostTable = "unsaved_post_images"
	// UnsavedPostInverseTable is the table name for the UnsavedPost entity.
	// It exists in this package in order to avoid circular dependency with the "unsavedpost" package.
	UnsavedPostInverseTable = "unsaved_posts"
	// UnsavedPostColumn is the table column denoting the unsaved_post relation/edge.
	UnsavedPostColumn = "unsaved_post_images"
)

// Columns holds all SQL columns for unsavedpostimage fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldValidity,
	FieldWidth,
	FieldHeight,
	FieldHash,
	FieldTitle,
	FieldURL,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "unsaved_post_images"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"unsaved_post_images",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// UUIDValidator is a validator for the "uuid" field. It is called by the builders before save.
	UUIDValidator func(string) error
	// HashValidator is a validator for the "hash" field. It is called by the builders before save.
	HashValidator func(string) error
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// URLValidator is a validator for the "url" field. It is called by the builders before save.
	URLValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)

// Validity defines the type for the "validity" enum field.
type Validity string

// ValidityPending is the default value of the Validity enum.
const DefaultValidity = ValidityPending

// Validity values.
const (
	ValidityPending Validity = "pending"
	ValidityValid   Validity = "valid"
	ValidityInvalid Validity = "invalid"
)

func (v Validity) String() string {
	return string(v)
}

// ValidityValidator is a validator for the "validity" field enum values. It is called by the builders before save.
func ValidityValidator(v Validity) error {
	switch v {
	case ValidityPending, ValidityValid, ValidityInvalid:
		return nil
	default:
		return fmt.Errorf("unsavedpostimage: invalid enum value for validity field: %q", v)
	}
}
